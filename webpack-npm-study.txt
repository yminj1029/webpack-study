# npm?
javascript 모든 라이브러리 관리, 공개 저장소. 패키지 매니저

npm init
npm init -y
: npm 초기화, 기본값 생성, package.json 생성


npm install [라이브러리 이름]
: node_modules 생성
npm install gulp
npm uninstall gulp

npm install gulp --global 
: 전역으로 설치된 라이브러리
경로 : /usr/local/lib/node_modules

지역 설치 vs 전역 설치
npm 전역 설치는 프로젝트에서 사용할 라이브러리가 아니라 시스템 레벨에서 사용할 자바스크립트 라이브러리를 설치할 때 사용합니다.
지역 설치는 프로젝트 위치에서 설치 node_modules로 설치 됩니다.

지역 설치 명령어 옵션
npm install () --save-dev (== npm i () -D) 
: devDependencies에서 관리.
npm install () --save-prod (==npm i () == npm install ())
: dependencies에서 관리


dependencies?
: jquery 또는 react 같은 화면과 직접적인 연관이 있는 라이브러리 == 배포용 라이브러리

devDependencies?
: 웹팩이나 sass처럼 개발에 도움을 주는 라이브러리 == 개발용 라이브러리
: 빌드, 배포할 때 devDependencies에 있으면 배포할 때 들어가지 않는다. 빌드 시간을 줄 수 있음. 

장점 
1) 한 곳에 작성하여 유지보수가 쉽다.
2) cdn을 사용할 경우 웹페이지에서 찾아 가져오는 경우보다 npm으로 설치했을 때 편리하다.


script : 커스텀 명령어 실행 할 수 있다.

build:webpack
- mode? development, production, none 설정. 모드 설정 안 하면 난독화 된다.
- entry, output 설정 가능
- option을 한 줄로 추가해서 관리하기 어려움
    ex) webpack --mode=none --entry=src/index.js --output=public/output.js .... 
- webpack 설정 파일을 사용함
    ex) module.exports = {
        mode : 'none',
        entry : 'src/index.js',
        output : 'public/output.js'
    };

lodash join api

웹팩 : js 파일을 하나로 합쳐서 리소스가 줄어들 수 있다. 
리퀘스트 파일 수가 줄어듬.

즉시실행 함수:
    ex)
    (function () {
        statements
    })();
- 즉시 실행 함수 표현(IIFE, Immediately Invoked Function Expression)
- 정의되자마자 즉시 실행되는 Javascript Function 를 말한다.
- 표현 내부의 변수는 외부로부터의 접근이 불가능하다.
- IIFE를 변수에 할당하면 IIFE 자체는 저장되지 않고, 함수가 실행된 결과만 저장된다.